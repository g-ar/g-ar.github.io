<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gopinath A R (regular expression)</title><link>https://g-ar.github.io/</link><description></description><atom:link type="application/rss+xml" href="https://g-ar.github.io/categories/regular-expression.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 25 Feb 2018 10:46:19 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Interactive Regexp and Replacing Regexp with Emacs</title><link>https://g-ar.github.io/posts/interactive-regexp-and-replacing-regexp-with-emacs/</link><description>&lt;div&gt;&lt;p&gt;If we need to replace text based on patterns, then &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;replace-regexp&lt;/span&gt;&lt;/tt&gt; is the command.&lt;/p&gt;
&lt;p&gt;But we may not always be sure that the regular expression (RE) entered does what we wanted. Not to worry, emacs has it covered: with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;re-builder&lt;/span&gt;&lt;/tt&gt;! As we keep entering the text, the editor progressively highlights the text in the buffer that matches. Once we are certain that all the required text has matched, we can move to enter the command to replace it.&lt;/p&gt;
&lt;p&gt;We'll look at a usecase where we need to uppercase some sql keywords, and cast the output of a function as float&lt;/p&gt;
&lt;blockquote&gt;
&lt;script src="https://asciinema.org/a/L6opRuaNH22ZbzdxHmlbDDRoR.js" id="asciicast-L6opRuaNH22ZbzdxHmlbDDRoR" async data-autoplay="true" data-speed="2" width="800"&gt;&lt;/script&gt;&lt;/blockquote&gt;
&lt;p&gt;In &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;replace-regexp&lt;/span&gt;&lt;/tt&gt;, the matched expressions are grouped using &lt;tt class="docutils literal"&gt;\(&lt;/tt&gt; ... &lt;tt class="docutils literal"&gt;\)&lt;/tt&gt;, and the matched groups can be accessed in the result as &lt;tt class="docutils literal"&gt;\1&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;\2&lt;/tt&gt;, etc.&lt;/p&gt;
&lt;blockquote&gt;
&lt;script src="https://asciinema.org/a/FPnVQNSBV0obVx2jgyDUJjchd.js" id="asciicast-FPnVQNSBV0obVx2jgyDUJjchd" async data-speed="2" width="800"&gt;&lt;/script&gt;&lt;/blockquote&gt;&lt;/div&gt;</description><category>emacs</category><category>regular expression</category><guid>https://g-ar.github.io/posts/interactive-regexp-and-replacing-regexp-with-emacs/</guid><pubDate>Sun, 25 Feb 2018 09:33:57 GMT</pubDate></item><item><title>Regular Expressions And Generating Functions</title><link>https://g-ar.github.io/posts/regular-expressions-and-generating-functions/</link><description>&lt;div&gt;&lt;p&gt;We'll discuss about the number of ways to generate a string of length n, matching or avoiding certain patterns as its substring.&lt;/p&gt;
&lt;p&gt;This can be easily achieved deriving an unambiguous regular expression (RE) by constructing a minimal Deterministic Finite Automaton (DFA), and then the ordinary Generating Function (GF) whose coefficients are the number of n-letter strings having the pattern.&lt;/p&gt;
&lt;p&gt;Let's look at a few examples, for the strings constructed over the set of symbols &lt;span class="math"&gt;\(\{0, 1\}\)&lt;/span&gt; such that&lt;/p&gt;
&lt;font size="+1"&gt;1. There are no two consecutive 1's&lt;/font&gt;&lt;p&gt;The RE is: &lt;span class="math"&gt;\((0+10)^*(1+\epsilon)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Then, to get its GF, replace each symbol with &lt;span class="math"&gt;\(x\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\epsilon\)&lt;/span&gt; with 1. Hence, the GF for the RE is&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_1(x) &amp;amp;= \frac{1}{1-x-x^2}\cdot (1+x)\\
&amp;amp;= \sum_{n\ge 0} \frac{ \left(\left(\sqrt{5}-3\right)
   \left(1-\sqrt{5}\right)^n+\left(\sqrt{5}+3\right)
   \left(1+\sqrt{5}\right)^n\right)}{\sqrt{5}\, 2^{n+1}} x^n\\
&amp;amp;= \sum_{n\ge 0} F_{n+2} x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(F_{n}\)&lt;/span&gt; is the fibonacci number&lt;/p&gt;
&lt;font size="+1"&gt;2. At least one pair of consecutive 1's as its substring&lt;/font&gt;&lt;p&gt;RE: &lt;span class="math"&gt;\((0+10)^*11(0+1)^*\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_2(x) &amp;amp;= \frac{1}{1-x-x^2} \cdot x^2\cdot \frac{1}{1-2\, x}\\
&amp;amp;= \sum_{n\ge 0} \left(\frac{ \left(\left(\sqrt{5}-3\right)
   \left(-\left(1-\sqrt{5}\right)^n\right)-\left(3+\sqrt{5}\right)
   \left(1+\sqrt{5}\right)^n\right)}{\sqrt{5}\, 2^{n+1}}+2^n\right)\, x^n\\
&amp;amp;= \sum_{n\ge 0}\left(2^{n} - F_{n+2}\right) x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;which can also be confirmed from the first example by taking its complement, since the number of possible words are &lt;span class="math"&gt;\(2^n\)&lt;/span&gt;&lt;/p&gt;
&lt;font size="+1"&gt;3. At least one 01 as its substring&lt;/font&gt;&lt;p&gt;RE: &lt;span class="math"&gt;\(1^*00^*1(0+1)^*\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_3(x) &amp;amp;= \frac{x^2}{(1-2 x) (1-x)^2}\\
&amp;amp;= \sum_{n\ge 0} \left(2^n-n-1\right) x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;For more, refer &lt;a class="reference external" href="http://algo.inria.fr/flajolet/Publications/book.pdf"&gt;Analytic Combinatorics&lt;/a&gt;, which is a treatise on Generating Functions.&lt;/p&gt;&lt;/div&gt;</description><category>generating function</category><category>mathjax</category><category>regular expression</category><guid>https://g-ar.github.io/posts/regular-expressions-and-generating-functions/</guid><pubDate>Fri, 26 Jan 2018 10:07:34 GMT</pubDate></item></channel></rss>