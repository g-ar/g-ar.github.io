<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Gopinath A R (rook polynomial)</title><link>https://g-ar.github.io/</link><description></description><atom:link rel="self" href="https://g-ar.github.io/categories/rook-polynomial.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 10 Sep 2017 17:53:02 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Generalized Derangements</title><link>https://g-ar.github.io/posts/generalized-derangements/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;Derangement problems are quite easy to do when there are no restrictions.
Suppose we want to extend the problem with restrictions, e.g.:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;There are bins numbered 1,2,3,4,1,2,3,4,1,2 , and there are balls numbered 1,2,3,4,5,1,2,3,4,5 (distinguishable, say, two sets with different colors), and each bin is to contain a single ball such that the number of the bin and the ball should not match. In how many ways can that be done? (or what is the probability of that happening?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This can be solved by using Rook polynomials.&lt;/p&gt;
&lt;p&gt;The rook polynomial for a &lt;span class="math"&gt;\(m\times n\)&lt;/span&gt; rectangle is:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle r_{m,n}(x)=\sum_{k=0}^n{m\choose k}\, {n!\over (n-k)!}\, x^k
\end{equation*}
&lt;/div&gt;
&lt;p&gt;For this problem:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(m=\)&lt;/span&gt; number of bins numbered 's'&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(n=\)&lt;/span&gt; number of balls numbered 's'&lt;/p&gt;
&lt;p&gt;and the rook polynomial we require to solve our problem is:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
\displaystyle R(x)&amp;amp;=r_{3,2}(x)\, r_{3,2}(x)\, r_{2,2}(x)\, r_{2,2}(x)\\\\
R(x)&amp;amp;=(6\, x^2 + 6\, x + 1)^2\, (2\, x^2 + 4\, x + 1)^2
\end{align*}
&lt;/div&gt;
&lt;p&gt;Now, with this rook polynomial, the number of ways of derangements can be found in two ways:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle \int_0^\infty \, x^n\, R\left(-\dfrac{1}{x}\right)\, e^{-x}\, dx
\end{equation*}
&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(n\)&lt;/span&gt; is the number of bins.&lt;/p&gt;
&lt;p&gt;Another way is to expand &lt;span class="math"&gt;\(R(x)\)&lt;/span&gt; and replace each &lt;span class="math"&gt;\(x^i\)&lt;/span&gt; with &lt;span class="math"&gt;\(i\cdot (n-i)!\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The answer divided by &lt;span class="math"&gt;\(n!\)&lt;/span&gt; gives the probability.&lt;/p&gt;
&lt;p&gt;Both ways are described in the following Sage code:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_a7695865022c42f4a111b8e2ddfb0b79-12"&gt;12&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'k'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binomial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;SR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;summ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;balls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;bins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;balls&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;stbin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stbin&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;rook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;rp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;balls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stbin&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;summ&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;rook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coefficient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a7695865022c42f4a111b8e2ddfb0b79-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;summ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s2"&gt;"="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;integrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;rook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;oo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s2"&gt;"~"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="n"&gt;summ&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;283/2520 = 283/2520 ~ 0.112301587301587 407520&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;which agrees with a simulation:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_75fe2d49daa84a7b98a986639dfeedee-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_75fe2d49daa84a7b98a986639dfeedee-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_75fe2d49daa84a7b98a986639dfeedee-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_75fe2d49daa84a7b98a986639dfeedee-4"&gt;4&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_75fe2d49daa84a7b98a986639dfeedee-1"&gt;&lt;/a&gt;lst=.10$1 2 3 4
&lt;a name="rest_code_75fe2d49daa84a7b98a986639dfeedee-2"&gt;&lt;/a&gt;a=.2#1+i.5
&lt;a name="rest_code_75fe2d49daa84a7b98a986639dfeedee-3"&gt;&lt;/a&gt;sim=: 3 : '0=+/((10?10){a)=lst'
&lt;a name="rest_code_75fe2d49daa84a7b98a986639dfeedee-4"&gt;&lt;/a&gt;(+/%#)(sim"0)1000000#0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;which is about &lt;span class="math"&gt;\(0.112101\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If we now turn our attention to the classic derangement problem, e.g. 10 bins and balls, each numbered 1 to 10, we change the variables accordingly:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_3e1431127d0c412f8bac6dabc7640336-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generalized-derangements/#rest_code_3e1431127d0c412f8bac6dabc7640336-2"&gt;2&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_3e1431127d0c412f8bac6dabc7640336-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;balls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_3e1431127d0c412f8bac6dabc7640336-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;bins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;balls&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;We see that the summ is indeed &lt;span class="math"&gt;\(1334961\)&lt;/span&gt;, which is the number of derangements, &lt;span class="math"&gt;\(D(10)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://math.stackexchange.com/questions/414023/probability-of-winning-the-game-1-2-3"&gt;1. Stackexchange problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.cs.uleth.ca/~holzmann/notes/rook.pdf"&gt;2. Notes on rook polynomial&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>derangement</category><category>integration</category><category>mathjax</category><category>rook polynomial</category><category>sage</category><category>summation</category><guid>https://g-ar.github.io/posts/generalized-derangements/</guid><pubDate>Fri, 04 Apr 2014 15:33:19 GMT</pubDate></item></channel></rss>