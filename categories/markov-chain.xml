<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Gopinath A R (markov chain)</title><link>https://g-ar.github.io/</link><description></description><atom:link rel="self" href="https://g-ar.github.io/categories/markov-chain.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 10 Sep 2017 17:53:01 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Deriving Explicit Formulas from Markov Chains</title><link>https://g-ar.github.io/posts/deriving-explicit-formulas-from-markov-chains/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;Once we formulate the markov model correctly, we can obtain the generating function for each entry in the matrix, where there's a possibility of getting the explicit formula. Let's take a look at one such problem:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A six faced unbiased die is rolled :math:`n` times. What is the probability that we get to see all the six numbers in the sequence?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Setting up a markov chain is easy:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle A= \begin{pmatrix} 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; \frac{1}{6} &amp;amp; \frac{5}{6} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; \frac{1}{3} &amp;amp; \frac{2}{3} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \frac{1}{2} &amp;amp; \frac{1}{2} &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \frac{2}{3} &amp;amp; \frac{1}{3} &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \frac{5}{6} &amp;amp; \frac{1}{6}\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \end{pmatrix}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The states indicate the number of faces shown up. E.g. the row above the last row indicates that when 5 faces are seen, there's a probability of &lt;span class="math"&gt;\(5/6\)&lt;/span&gt; remaining in the same state and &lt;span class="math"&gt;\(1/6\)&lt;/span&gt; moving to the final state.&lt;/p&gt;
&lt;p&gt;So, &lt;span class="math"&gt;\(A^n[0,6]\)&lt;/span&gt;, gives the required answer. But we can also find the generating function for that entry by computing &lt;span class="math"&gt;\((I-x\, A)^{-1}\)&lt;/span&gt;, which is&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle G(x) = \frac{10 \, x^{6}}{{\left(5 \, x - 6\right)} {\left(2 \, x - 3\right)} {\left(x - 1\right)} {\left(x - 2\right)} {\left(x - 3\right)} {\left(x - 6\right)}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and on partial fractions it's&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle G(x) = \frac{36}{5 \, x - 6} - \frac{45}{2 \, x - 3} - \frac{1}{x - 1} + \frac{40}{x - 2} - \frac{45}{x - 3} + \frac{36}{x - 6} + 1
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and the probability can be written by extracting &lt;span class="math"&gt;\([x^n]G(x)\)&lt;/span&gt; as&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\displaystyle \mathbb{P}(n) = 1-\frac{6}{6^n}+\frac{15}{3^n}-\frac{20}{2^n}+15\left(\frac{2}{3}\right)^n-6\left(\frac{5}{6}\right)^n
\end{equation*}
&lt;/div&gt;
&lt;p&gt;which can be verified by a simulation in J:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/deriving-explicit-formulas-from-markov-chains/#rest_code_5bc587da7fee4bda8fdfaa68720a66f6-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/deriving-explicit-formulas-from-markov-chains/#rest_code_5bc587da7fee4bda8fdfaa68720a66f6-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/deriving-explicit-formulas-from-markov-chains/#rest_code_5bc587da7fee4bda8fdfaa68720a66f6-3"&gt;3&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_5bc587da7fee4bda8fdfaa68720a66f6-1"&gt;&lt;/a&gt;n=:10
&lt;a name="rest_code_5bc587da7fee4bda8fdfaa68720a66f6-2"&gt;&lt;/a&gt;sim=: 3 : '6=+/~:?n#6'
&lt;a name="rest_code_5bc587da7fee4bda8fdfaa68720a66f6-3"&gt;&lt;/a&gt;(+/%#)(sim"0)1e5#0 NB. about 0.27
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\mathbb{P}(10) = \dfrac{38045}{139968} \approx 0.271812128486511
\end{equation*}
&lt;/div&gt;&lt;/div&gt;</description><category>generating function</category><category>J</category><category>markov chain</category><category>mathjax</category><category>sage</category><category>simulation</category><guid>https://g-ar.github.io/posts/deriving-explicit-formulas-from-markov-chains/</guid><pubDate>Sun, 09 Aug 2015 11:41:29 GMT</pubDate></item><item><title>Average Number Of Switch Flips Required To Turn On All The Lights</title><link>https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;Suppose there is an array of lights, initially all turned off, and during each step you randomly select a light and turn it on or off if it's in off or on state, respectively. On an average, how many steps are required to take it to all turned on state?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This can be solved using an absorbing Markov chain, or by using a probability tree diagram.&lt;/p&gt;
&lt;p&gt;In the method using the absorbing Markov chain, the starting state is for all turned off.
It can move to the next state which is for one random light turned on. The probability of moving to that state is 1.&lt;/p&gt;
&lt;p&gt;From state 1, it can go back to state 0 with a probability of &lt;span class="math"&gt;\(\dfrac{1}{n}\)&lt;/span&gt;, or to state 2 with probability of &lt;span class="math"&gt;\(1-\dfrac{1}{n}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And so on, in the &lt;span class="math"&gt;\((n-1)^{th}\)&lt;/span&gt; state, it can go to the absorbing state n with a probability of &lt;span class="math"&gt;\(\dfrac{1}{n}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;E.g. For &lt;span class="math"&gt;\(n=6\)&lt;/span&gt;, the matrix looks like this:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
A=\left(\begin{array}{rrrrrrr}
0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\[10pt]
\dfrac{1}{6} &amp;amp; 0 &amp;amp; \dfrac{5}{6} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\[10pt]
0 &amp;amp; \dfrac{1}{3} &amp;amp; 0 &amp;amp; \dfrac{2}{3} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\[10pt]
0 &amp;amp; 0 &amp;amp; \dfrac{1}{2} &amp;amp; 0 &amp;amp; \dfrac{1}{2} &amp;amp; 0 &amp;amp; 0 \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \dfrac{2}{3} &amp;amp; 0 &amp;amp; \dfrac{1}{3} &amp;amp; 0 \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \dfrac{5}{6} &amp;amp; 0 &amp;amp; \dfrac{1}{6} \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1
\end{array}\right)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Thus, the matrix Q is:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
Q=\left(\begin{array}{rrrrrr}
0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\[10pt]
\dfrac{1}{6} &amp;amp; 0 &amp;amp; \dfrac{5}{6} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\[10pt]
0 &amp;amp; \dfrac{1}{3} &amp;amp; 0 &amp;amp; \dfrac{2}{3} &amp;amp; 0 &amp;amp; 0 \\[10pt]
0 &amp;amp; 0 &amp;amp; \dfrac{1}{2} &amp;amp; 0 &amp;amp; \dfrac{1}{2} &amp;amp; 0 \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \dfrac{2}{3} &amp;amp; 0 &amp;amp; \dfrac{1}{3} \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \dfrac{5}{6} &amp;amp; 0
\end{array}\right)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;And the Expected number of steps is found from&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
(I-Q)^{-1} = \left(\begin{array}{rrrrrr}
\dfrac{13}{5} &amp;amp; \dfrac{48}{5} &amp;amp; 21 &amp;amp; 26 &amp;amp; 18 &amp;amp; 6 \\[10pt]
\dfrac{8}{5} &amp;amp; \dfrac{48}{5} &amp;amp; 21 &amp;amp; 26 &amp;amp; 18 &amp;amp; 6 \\[10pt]
\dfrac{7}{5} &amp;amp; \dfrac{42}{5} &amp;amp; 21 &amp;amp; 26 &amp;amp; 18 &amp;amp; 6 \\[10pt]
\dfrac{13}{10} &amp;amp; \dfrac{39}{5} &amp;amp; \dfrac{39}{2} &amp;amp; 26 &amp;amp; 18
&amp;amp; 6 \\[10pt]
\dfrac{6}{5} &amp;amp; \dfrac{36}{5} &amp;amp; 18 &amp;amp; 24 &amp;amp; 18 &amp;amp; 6 \\[10pt]
1 &amp;amp; 6 &amp;amp; 15 &amp;amp; 20 &amp;amp; 15 &amp;amp; 6
\end{array}\right)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The sum of first row gives the expected time it takes to move from the initial state to the absorbing state, which evaluates to &lt;span class="math"&gt;\(\dfrac{416}{5} = 83.2\)&lt;/span&gt; steps.&lt;/p&gt;
&lt;p&gt;This markov chain can be used also to calculate the probability of being in a certain state after 'k' steps.&lt;/p&gt;
&lt;p&gt;E.g. What is the probability of all 6 lights being turned on after random flipping of switches 8 times?&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
A^8=\left(\begin{array}{rrrrrrr}
\dfrac{169}{4374} &amp;amp; 0 &amp;amp; \dfrac{1105}{2187} &amp;amp; 0 &amp;amp; \dfrac{815}{1944} &amp;amp; 0 &amp;amp; \dfrac{215}{5832} \\[10pt]
0 &amp;amp; \dfrac{2717}{13122} &amp;amp; 0 &amp;amp; \dfrac{16175}{26244} &amp;amp; 0 &amp;amp; \dfrac{815}{5832} &amp;amp; \dfrac{215}{5832} \\[10pt]
\dfrac{221}{6561} &amp;amp; 0 &amp;amp; \dfrac{12487}{26244} &amp;amp; 0 &amp;amp; \dfrac{931}{2187} &amp;amp; 0 &amp;amp; \dfrac{7}{108} \\[10pt]
0 &amp;amp; \dfrac{3235}{17496} &amp;amp; 0 &amp;amp; \dfrac{10381}{17496} &amp;amp; 0 &amp;amp; \dfrac{5003}{34992} &amp;amp; \dfrac{919}{11664} \\[10pt]
\dfrac{163}{5832} &amp;amp; 0 &amp;amp; \dfrac{931}{2187} &amp;amp; 0 &amp;amp; \dfrac{42613}{104976} &amp;amp; 0 &amp;amp; \dfrac{14741}{104976} \\[10pt]
0 &amp;amp; \dfrac{815}{5832} &amp;amp; 0 &amp;amp; \dfrac{25015}{52488} &amp;amp; 0 &amp;amp; \dfrac{12595}{104976} &amp;amp; \dfrac{9227}{34992} \\[10pt]
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1
\end{array}\right)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Answer is &lt;span class="math"&gt;\(A^8[0,6] = \dfrac{215}{5832}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We can construct the markov chain and calculate the expected value in Sagemath (a very promising free CAS) as follows:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-4"&gt;4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-5"&gt;5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-6"&gt;6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-7"&gt;7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-8"&gt;8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_5b266ae6971345068cd508a27468b73f-9"&gt;9&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5b266ae6971345068cd508a27468b73f-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;identity_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;If we want to know only the expected value, we can use the tree method:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="../../images/flip1.png" src="https://g-ar.github.io/images/flip1.png"&gt;
&lt;p class="caption"&gt;Probability tree to calculate expected value&lt;/p&gt;
&lt;/div&gt;
&lt;div class="math"&gt;
\begin{align*}
\displaystyle E_0&amp;amp;=1\cdot(1+E_1) \\
E_1 &amp;amp;= \dfrac{1}{n}\cdot(1+E_0)+\left(1-\dfrac{1}{n}\right)\cdot(1+E_2)\\
E_2 &amp;amp;= \dfrac{2}{n}\cdot(1+E_1)+\left(1-\dfrac{2}{n}\right)\cdot(1+E_3)\\
\vdots \\
E_{n-1} &amp;amp;= \dfrac{n-1}{n}\cdot(1+E_{n-2})+\left(1-\dfrac{n-1}{n}\right)\cdot(1)\\
\end{align*}
&lt;/div&gt;
&lt;p&gt;From the above set of equations, we can derive the following algorithm to calculate the expected value in Sage:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-4"&gt;4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-5"&gt;5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-6"&gt;6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-7"&gt;7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-8"&gt;8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/#rest_code_53fb65f78af2487f811404825ca4cabc-9"&gt;9&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;summ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;summ&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_53fb65f78af2487f811404825ca4cabc-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;summ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;As we see, the n is taken to be &lt;span class="math"&gt;\(6\)&lt;/span&gt;, and the answer returned is &lt;span class="math"&gt;\(416/5\)&lt;/span&gt;. The variable name is chosen as 'summ', since sum is a function's name. And, ax indicates a function of x.&lt;/p&gt;
&lt;p&gt;For higher values of n, we get e.g.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(n=32:\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\dfrac{20053487665674803216384}{4512611027925}\approx 4443876846.81
\end{equation*}
&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(n=64:\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\dfrac{346357890987659686224886668704722715345420288}{18472920064106597929865025} \approx 18749493300771803147.7216833338
\end{equation*}
&lt;/div&gt;&lt;/div&gt;</description><category>expected value</category><category>markov chain</category><category>mathjax</category><category>probability</category><category>sage</category><guid>https://g-ar.github.io/posts/average-number-of-switch-flips-required-to-turn-on-all-the-lights/</guid><pubDate>Sat, 18 Jan 2014 05:21:51 GMT</pubDate></item></channel></rss>