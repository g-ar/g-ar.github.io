<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Gopinath A R (GCC)</title><link>https://g-ar.github.io/</link><description></description><atom:link type="application/rss+xml" href="https://g-ar.github.io/categories/gcc.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Thu, 15 Sep 2016 17:51:38 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Compiling softwares that require later versions of GCC</title><link>https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;Suppose we require to install the latest version of a software, but the repository doesn't have it, we usually either get the latest source code and compile, or download the compiled binary if available, and run it. But if we are running some old distro, latest binary refuse to run complaining that it requires GLIBC 2.16 to run etc. When the binary file refuses to run, we can then try to compile the source, which usually works fine. But sometimes it happens that the source requires a language standard, which is unsupported by the GCC version installed. In such cases, we can download the latest GCC, compile it, and then compile the required software using the latest GCC. We'll see an example to compile "Context Free" -- a program which generates art from a context free grammar, and requires C++11 standard to compile. The steps mentioned below were done on debian wheezy, whose software repository contains version 2 of cfdg whereas the latest version is 3.&lt;/p&gt;
&lt;p&gt;In order to compile the latest version of contextfree in debian wheezy:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Download the latest GCC&lt;/li&gt;
&lt;li&gt;Extract and configure with a prefix path, so that we can avoid installing it to a directory which requires root privilege&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;./configure &lt;span class="pre"&gt;--prefix=$HOME/bin/custom_gcc&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;The compile and install to that path, the whole process takes much time anywhere between 10 mins to a couple of hours or more, depending on the speed of the machine and the number of cores used.
To compile on a single core, use&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;make&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After GCC is installed, we need to indicate in the makefile of contextfree to use that version of GCC. So, add the following lines to the makefile, install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;libpng12-dev&lt;/span&gt;&lt;/tt&gt; and compile.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_7807578d1c30478ba4e46bccac282f45-0"&gt;0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_7807578d1c30478ba4e46bccac282f45-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_7807578d1c30478ba4e46bccac282f45-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_7807578d1c30478ba4e46bccac282f45-3"&gt;3&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_7807578d1c30478ba4e46bccac282f45-0"&gt;&lt;/a&gt;&lt;span class="nv"&gt;CC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;HOME&lt;span class="k"&gt;)&lt;/span&gt;/bin/gcc_custom/bin/gcc
&lt;a name="rest_code_7807578d1c30478ba4e46bccac282f45-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;LD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;HOME&lt;span class="k"&gt;)&lt;/span&gt;/bin/gcc_custom/bin/gcc
&lt;a name="rest_code_7807578d1c30478ba4e46bccac282f45-2"&gt;&lt;/a&gt;&lt;span class="nv"&gt;CPP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;HOME&lt;span class="k"&gt;)&lt;/span&gt;/bin/gcc_custom/bin/g++
&lt;a name="rest_code_7807578d1c30478ba4e46bccac282f45-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;CXX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;HOME&lt;span class="k"&gt;)&lt;/span&gt;/bin/gcc_custom/bin/g++
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The output cfdg can then be used as a standalone file. But we need to export some paths to run it, otherwise it'll complain about the older libraries. To get around that, we can create a small bash script to export the compiler and library paths and then run cfdg. E.g. create a script in &lt;tt class="docutils literal"&gt;$HOME/bin&lt;/tt&gt; named cfdg with following contents&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_1ae3059c36f0404fb1661c1571cc9543-0"&gt;0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_1ae3059c36f0404fb1661c1571cc9543-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_1ae3059c36f0404fb1661c1571cc9543-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_1ae3059c36f0404fb1661c1571cc9543-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/#rest_code_1ae3059c36f0404fb1661c1571cc9543-4"&gt;4&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_1ae3059c36f0404fb1661c1571cc9543-0"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;a name="rest_code_1ae3059c36f0404fb1661c1571cc9543-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/gcc_custom/bin/gcc
&lt;a name="rest_code_1ae3059c36f0404fb1661c1571cc9543-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/gcc_custom/bin/g++
&lt;a name="rest_code_1ae3059c36f0404fb1661c1571cc9543-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/gcc_custom/lib64
&lt;a name="rest_code_1ae3059c36f0404fb1661c1571cc9543-4"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/context-free-3.0.9/cfdg &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and &lt;tt class="docutils literal"&gt;chmod +x cfdg&lt;/tt&gt;, and have fun with the software!&lt;/p&gt;&lt;/div&gt;</description><category>computer art</category><category>context free art</category><category>debian</category><category>GCC</category><category>linux</category><category>mathjax</category><guid>https://g-ar.github.io/posts/compiling-softwares-that-require-later-versions-of-gcc/</guid><pubDate>Sun, 20 Dec 2015 14:10:01 GMT</pubDate></item><item><title>Generating image patterns</title><link>https://g-ar.github.io/posts/generating-image-patterns/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;Computer and art mix very nicely. We can algorithmically generate patterns, be it pictures or music, which are aesthetic.&lt;/p&gt;
&lt;p&gt;Here is an example program for *nix systems which generates fractal like tiling.
We use tga format, which is simple but uncompressed. For compression, we may use imagemagick suit's convert command.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-0"&gt; 0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-42"&gt;42&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-43"&gt;43&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-44"&gt;44&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-image-patterns/#rest_code_78f28cb5321147759a3d8cb841ff03d5-45"&gt;45&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code C"&gt;&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-0"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define width 1366&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define height 768&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-9"&gt;&lt;/a&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-11"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-12"&gt;&lt;/a&gt;  &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-13"&gt;&lt;/a&gt;  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-14"&gt;&lt;/a&gt;  &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-16"&gt;&lt;/a&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-21"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-23"&gt;&lt;/a&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.tga"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDWR&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;O_CREAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S_IRUSR&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IWUSR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-24"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-25"&gt;&lt;/a&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error opening file&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-27"&gt;&lt;/a&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-28"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-29"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-30"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-31"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-34"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-35"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x00FF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-36"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-37"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x00FF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-38"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-39"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-40"&gt;&lt;/a&gt;  &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-41"&gt;&lt;/a&gt;  &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-42"&gt;&lt;/a&gt;  &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-43"&gt;&lt;/a&gt;  &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-44"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_78f28cb5321147759a3d8cb841ff03d5-45"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="figure"&gt;
&lt;img alt="../../images/pattern.png" src="https://g-ar.github.io/images/pattern.png"&gt;
&lt;p class="caption"&gt;Image generated by the program&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>C</category><category>computer art</category><category>GCC</category><category>mathjax</category><guid>https://g-ar.github.io/posts/generating-image-patterns/</guid><pubDate>Fri, 07 Feb 2014 14:41:32 GMT</pubDate></item><item><title>C code to assembly using gcc and gdb</title><link>https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/</link><dc:creator>Gopinath</dc:creator><description>&lt;div&gt;&lt;p&gt;Reading the disassembled code from the C programs which we can comfortably write is a great way to learn assembly language, do some archtecture specific optimizations and also to know what's happening under the hood.&lt;/p&gt;
&lt;p&gt;In this post, we will see how to translate a small C program to assembly (using flat assembler).&lt;/p&gt;
&lt;p&gt;Consider the following, where the code for gcd is taken from rosetta code:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-0"&gt; 0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30bb23d7ac224a57a8b710297c7cb901-11"&gt;11&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code C"&gt;&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-0"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-1"&gt;&lt;/a&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-2"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-7"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_30bb23d7ac224a57a8b710297c7cb901-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Compile to 32 bit code as&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_b59b258d35b1458aba792b96fa66bf90-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_b59b258d35b1458aba792b96fa66bf90-0"&gt;&lt;/a&gt;gcc -o gcd gcd.c -m32
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and disassemble:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_c2cdf090870742879b8d88aeb09f61f0-0"&gt;0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_c2cdf090870742879b8d88aeb09f61f0-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_c2cdf090870742879b8d88aeb09f61f0-0"&gt;&lt;/a&gt;gdb ./gcd
&lt;a name="rest_code_c2cdf090870742879b8d88aeb09f61f0-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt; disas gcd
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;We will see something like this:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-0"&gt; 0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_3a6487d0e6df410cb31760a2e76e9346-17"&gt;17&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code S"&gt;&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-0"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048454&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    push   ebp
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-1"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048455&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    mov    ebp&lt;span class="p"&gt;,&lt;/span&gt;esp
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-2"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048457&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    sub    esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x18&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-3"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804845a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+6&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    cmp    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mh"&gt;0x0&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-4"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804845e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+10&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    je     &lt;span class="mh"&gt;0x804847e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;gcd&lt;span class="m"&gt;+42&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-5"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048460&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+12&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;x8&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-6"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048463&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+15&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    edx&lt;span class="p"&gt;,&lt;/span&gt;eax
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-7"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048465&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+17&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    sar    edx&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x1f&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-8"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048468&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+20&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    idiv   DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-9"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804846b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+23&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;edx
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-10"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804846d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+25&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-11"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048471&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+29&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-12"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048474&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-13"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048477&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+35&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    call   &lt;span class="mh"&gt;0x8048454&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;gcd&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-14"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804847c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+40&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    jmp    &lt;span class="mh"&gt;0x8048481&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;gcd&lt;span class="m"&gt;+45&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-15"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804847e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+42&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;x8&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-16"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048481&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+45&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    leave
&lt;a name="rest_code_3a6487d0e6df410cb31760a2e76e9346-17"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048482&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+46&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    ret
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_a62c2ebde4cb4447b9d5b33e009d0ffb-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_a62c2ebde4cb4447b9d5b33e009d0ffb-0"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt; disas main
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;shows like this:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-0"&gt; 0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_30e3df2f029840f8b87e67b360a99615-22"&gt;22&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code S"&gt;&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-0"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048483&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    push   ebp
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-1"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048484&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    mov    ebp&lt;span class="p"&gt;,&lt;/span&gt;esp
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-2"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048486&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    and    esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xfffffff0&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-3"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048489&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+6&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    sub    esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x20&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-4"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804848c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+9&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x80485b0&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-5"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048491&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+14&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    lea    edx&lt;span class="p"&gt;,[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x1c&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-6"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048495&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+18&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x8&lt;span class="p"&gt;],&lt;/span&gt;edx
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-7"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x08048499&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+22&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    lea    edx&lt;span class="p"&gt;,[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x18&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-8"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x0804849d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+26&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;edx
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-9"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484a1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+30&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-10"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484a4&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+33&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    call   &lt;span class="mh"&gt;0x8048380&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;__isoc99_scanf&lt;span class="o"&gt;@&lt;/span&gt;plt&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-11"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484a9&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+38&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    edx&lt;span class="p"&gt;,&lt;/span&gt;DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x1c&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-12"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484ad&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+42&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x18&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-13"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484b1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+46&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;edx
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-14"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484b5&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+50&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-15"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484b8&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+53&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    call   &lt;span class="mh"&gt;0x8048454&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;gcd&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-16"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484bd&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+58&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    edx&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x80485b5&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-17"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484c2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+63&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-18"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484c6&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+67&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    DWORD PTR &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;edx
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-19"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484c9&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+70&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    call   &lt;span class="mh"&gt;0x8048390&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;printf&lt;span class="o"&gt;@&lt;/span&gt;plt&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-20"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484ce&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+75&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x0&lt;/span&gt;
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-21"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484d3&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+80&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    leave
&lt;a name="rest_code_30e3df2f029840f8b87e67b360a99615-22"&gt;&lt;/a&gt;&lt;span class="mh"&gt;0x080484d4&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;+81&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;    ret
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;From the disassembly, we can see that the function arguments are pushed from right to left.
We can also see that the local variables are allocated space in the stack.&lt;/p&gt;
&lt;p&gt;We need to replace all the relative references by labels, memory references by names and remove all "PTR" keywords.
Using the example to produce dynamically linked executable from fasm for linux (doing it in 1.70.03), we may write it as:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-0"&gt; 0&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-42"&gt;42&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-43"&gt;43&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-44"&gt;44&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-45"&gt;45&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-46"&gt;46&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-47"&gt;47&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-48"&gt;48&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-49"&gt;49&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-50"&gt;50&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-51"&gt;51&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-52"&gt;52&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_ff91ddd420b44e21949e1ec1df19b5dc-53"&gt;53&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code S"&gt;&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-0"&gt;&lt;/a&gt;format ELF executable &lt;span class="m"&gt;3&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-1"&gt;&lt;/a&gt;entry start
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-3"&gt;&lt;/a&gt;include      &lt;span class="s"&gt;'examples/elfexe/dynamic/import32.inc'&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-4"&gt;&lt;/a&gt;include      &lt;span class="s"&gt;'examples/elfexe/dynamic/proc32.inc'&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-6"&gt;&lt;/a&gt;interpreter  &lt;span class="s"&gt;'/lib/ld-linux.so.2'&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-7"&gt;&lt;/a&gt;needed       &lt;span class="s"&gt;'libc.so.6'&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-8"&gt;&lt;/a&gt;import       printf&lt;span class="p"&gt;,&lt;/span&gt;scanf&lt;span class="p"&gt;,&lt;/span&gt;exit
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-10"&gt;&lt;/a&gt;segment readable executable
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-12"&gt;&lt;/a&gt;gcd&lt;span class="o"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-13"&gt;&lt;/a&gt;    push   ebp
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-14"&gt;&lt;/a&gt;    mov    ebp&lt;span class="p"&gt;,&lt;/span&gt;esp
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-15"&gt;&lt;/a&gt;    sub    esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x18&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-16"&gt;&lt;/a&gt;    cmp    DWORD &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mh"&gt;0x0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-17"&gt;&lt;/a&gt;    je     l1
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-18"&gt;&lt;/a&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;x8&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-19"&gt;&lt;/a&gt;    mov    edx&lt;span class="p"&gt;,&lt;/span&gt;eax
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-20"&gt;&lt;/a&gt;    sar    edx&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x1f&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-21"&gt;&lt;/a&gt;    idiv   DWORD &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-22"&gt;&lt;/a&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;edx
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-23"&gt;&lt;/a&gt;    mov    DWORD &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-24"&gt;&lt;/a&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;xc&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-25"&gt;&lt;/a&gt;    mov    DWORD &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-26"&gt;&lt;/a&gt;    call   gcd
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-27"&gt;&lt;/a&gt;    jmp    l2
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-28"&gt;&lt;/a&gt;l1&lt;span class="o"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-29"&gt;&lt;/a&gt;    mov    eax&lt;span class="p"&gt;,&lt;/span&gt;DWORD &lt;span class="p"&gt;[&lt;/span&gt;ebp&lt;span class="m"&gt;+0&lt;/span&gt;x8&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-30"&gt;&lt;/a&gt;l2&lt;span class="o"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-31"&gt;&lt;/a&gt;    leave
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-32"&gt;&lt;/a&gt;    ret
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-33"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-34"&gt;&lt;/a&gt;start&lt;span class="o"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-35"&gt;&lt;/a&gt;    push     ebp
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-36"&gt;&lt;/a&gt;    mov      ebp&lt;span class="p"&gt;,&lt;/span&gt;esp
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-37"&gt;&lt;/a&gt;    and      esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xfffffff0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-38"&gt;&lt;/a&gt;    sub      esp&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x20&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-39"&gt;&lt;/a&gt;    cinvoke  scanf&lt;span class="p"&gt;,&lt;/span&gt;pars&lt;span class="p"&gt;,&lt;/span&gt;n&lt;span class="p"&gt;,&lt;/span&gt;m
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-40"&gt;&lt;/a&gt;    mov      edx&lt;span class="p"&gt;,[&lt;/span&gt;n&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-41"&gt;&lt;/a&gt;    mov      eax&lt;span class="p"&gt;,[&lt;/span&gt;m&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-42"&gt;&lt;/a&gt;    mov      DWORD  &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="m"&gt;+0&lt;/span&gt;x4&lt;span class="p"&gt;],&lt;/span&gt;edx
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-43"&gt;&lt;/a&gt;    mov      DWORD  &lt;span class="p"&gt;[&lt;/span&gt;esp&lt;span class="p"&gt;],&lt;/span&gt;eax
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-44"&gt;&lt;/a&gt;    call     gcd
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-45"&gt;&lt;/a&gt;    cinvoke  printf&lt;span class="p"&gt;,&lt;/span&gt;parspf&lt;span class="p"&gt;,&lt;/span&gt;eax
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-46"&gt;&lt;/a&gt;    mov      eax&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-47"&gt;&lt;/a&gt;    cinvoke  exit
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-48"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-49"&gt;&lt;/a&gt;segment readable writeable
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-50"&gt;&lt;/a&gt;    pars    db &lt;span class="s"&gt;'%d%d'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-51"&gt;&lt;/a&gt;    parspf  db &lt;span class="s"&gt;'%d'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-52"&gt;&lt;/a&gt;    n       dd &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_ff91ddd420b44e21949e1ec1df19b5dc-53"&gt;&lt;/a&gt;    m       dd &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and assemble:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_7d575bb4c7dc4a4b8d9efb585818ffda-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_7d575bb4c7dc4a4b8d9efb585818ffda-0"&gt;&lt;/a&gt;./fasm gcd.asm
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The assembled code will perform the same way, but the executable produced is about 10 times smaller! With the assembly code, we will have more liberty to use architecture specific instructions. And, if we see that there are unnecessary register spills happening, we may modify the code to avoid it. (using "register" keyword and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-O3&lt;/span&gt;&lt;/tt&gt; option in gcc makes good use of registers)&lt;/p&gt;
&lt;p&gt;p.s.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;By default, disassembly syntax is not intel. To change it, use&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/#rest_code_e16a7c31824d46c8818d1340cd8d3d1d-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_e16a7c31824d46c8818d1340cd8d3d1d-0"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; disassembly-flavor intel
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You may consider placing it in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.gdbinit&lt;/span&gt;&lt;/tt&gt; to use intel syntax everytime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-m32&lt;/span&gt;&lt;/tt&gt; option in gcc is not required if 32 bit linux distro is used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-g&lt;/span&gt;&lt;/tt&gt; option is helpful in debugging the executable. We can check instruction-wise disassembly and also deduce the operator  precedence. You'll never need another silly book on C. When in doubt, go to the root!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>assembly</category><category>C</category><category>fasm</category><category>GCC</category><category>GDB</category><guid>https://g-ar.github.io/posts/c-code-to-assembly-using-gcc-and-gdb/</guid><pubDate>Sun, 19 Jan 2014 17:59:58 GMT</pubDate></item></channel></rss>