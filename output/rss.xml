<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gopinath A R</title><link>https://g-ar.github.io/</link><description>Some random stuffs -- Programming and Mathematics</description><atom:link type="application/rss+xml" rel="self" href="https://g-ar.github.io/rss.xml"></atom:link><language>en</language><lastBuildDate>Fri, 26 Jan 2018 12:45:56 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Regular Expressions And Generating Functions</title><link>https://g-ar.github.io/posts/regular-expressions-and-generating-functions/</link><description>&lt;div&gt;&lt;p&gt;We'll discuss about the number of ways to generate a string of length n, matching or avoiding certain patterns as its substring.&lt;/p&gt;
&lt;p&gt;This can be easily achieved deriving an unambiguous regular expression (RE) by constructing a minimal Deterministic Finite Automaton (DFA), and then the ordinary Generating Function (GF) whose coefficients are the number of n-letter strings having the pattern.&lt;/p&gt;
&lt;p&gt;Let's look at a few examples, for the strings constructed over the set of symbols &lt;span class="math"&gt;\(\{0, 1\}\)&lt;/span&gt; such that&lt;/p&gt;
&lt;font size="+1"&gt;1. There are no two consecutive 1's&lt;/font&gt;&lt;p&gt;The RE is: &lt;span class="math"&gt;\((0+10)^*(1+\epsilon)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Then, to get its GF, replace each symbol with &lt;span class="math"&gt;\(x\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\epsilon\)&lt;/span&gt; with 1. Hence, the GF for the RE is&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_1(x) &amp;amp;= \frac{1}{1-x-x^2}\cdot (1+x)\\
&amp;amp;= \sum_{n\ge 0} \frac{ \left(\left(\sqrt{5}-3\right)
   \left(1-\sqrt{5}\right)^n+\left(\sqrt{5}+3\right)
   \left(1+\sqrt{5}\right)^n\right)}{\sqrt{5}\, 2^{n+1}} x^n\\
&amp;amp;= \sum_{n\ge 0} F_{n+2} x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(F_{n}\)&lt;/span&gt; is the fibonacci number&lt;/p&gt;
&lt;font size="+1"&gt;2. At least one pair of consecutive 1's as its substring&lt;/font&gt;&lt;p&gt;RE: &lt;span class="math"&gt;\((0+10)^*11(0+1)^*\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_2(x) &amp;amp;= \frac{1}{1-x-x^2} \cdot x^2\cdot \frac{1}{1-2\, x}\\
&amp;amp;= \sum_{n\ge 0} \frac{ \left(\left(\sqrt{5}-3\right)
   \left(-\left(1-\sqrt{5}\right)^n\right)-\left(3+\sqrt{5}\right)
   \left(1+\sqrt{5}\right)^n\right)}{\sqrt{5}\, 2^{n+1}}+2^n\\
&amp;amp;= \sum_{n\ge 0}\left(2^{n} - F_{n+2}\right) x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;which can also be confirmed from the first example by taking its complement, since the number of possible words are &lt;span class="math"&gt;\(2^n\)&lt;/span&gt;&lt;/p&gt;
&lt;font size="+1"&gt;3. At least one 01 as its substring&lt;/font&gt;&lt;p&gt;RE: &lt;span class="math"&gt;\(1^*00^*1(0+1)^*\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
G_3(x) &amp;amp;= \frac{x^2}{(1-2 x) (1-x)^2}\\
&amp;amp;= \sum_{n\ge 0} \left(2^n-n-1\right) x^n
\end{align*}
&lt;/div&gt;
&lt;p&gt;For more, refer &lt;a class="reference external" href="http://algo.inria.fr/flajolet/Publications/book.pdf"&gt;Analytic Combinatorics&lt;/a&gt;, which is a treatise on Generating Functions.&lt;/p&gt;&lt;/div&gt;</description><category>generating function</category><category>mathjax</category><category>regular expression</category><guid>https://g-ar.github.io/posts/regular-expressions-and-generating-functions/</guid><pubDate>Fri, 26 Jan 2018 10:07:34 GMT</pubDate></item><item><title>Communicating With Serial Ports Using Emacs</title><link>https://g-ar.github.io/posts/communicating-with-serial-ports-using-emacs/</link><description>&lt;div&gt;&lt;p&gt;Emacs can even be used to communicate with serial ports! Hence, it can replace softwares like minicom, hyperterminal, putty etc. that are used for serial port communication.&lt;/p&gt;
&lt;p&gt;Making a connection is simple,&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_6386439fabd84729a6bc37c526150621-1"&gt;&lt;/a&gt;M-x serial-term
&lt;/pre&gt;&lt;p&gt;enter port name and baud rate, and it's connected!&lt;/p&gt;
&lt;p&gt;E.g. In Linux based systems, if we need to connect to a GSM modem, find its port name by listing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/dev/serial/by-id/&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_cf48c2ef2dbb476aa8711fbaf4146d0c-1"&gt;&lt;/a&gt;ls -l /dev/serial/by-id/
&lt;/pre&gt;&lt;p&gt;which will show the symbolic link to the serial port to be used. Suppose the name is &lt;tt class="docutils literal"&gt;/dev/ttyUSB3&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Then, using that name with the default baud rate (9600 bps) connects to the modem. The settings can be changed at runtime without requiring to reconnect to the serial port.&lt;/p&gt;
&lt;p&gt;And we may issue the standard AT commands&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-1"&gt;&lt;/a&gt;at
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-2"&gt;&lt;/a&gt;OK
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-3"&gt;&lt;/a&gt;at+cpin?
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-4"&gt;&lt;/a&gt;+CPIN: READY
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-6"&gt;&lt;/a&gt;OK
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-7"&gt;&lt;/a&gt;at+csq
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-8"&gt;&lt;/a&gt;+CSQ: 14,99
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-10"&gt;&lt;/a&gt;OK
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-11"&gt;&lt;/a&gt;at+cmgf=1
&lt;a name="rest_code_8abf1fe919034ca99fd08fce57e22ec2-12"&gt;&lt;/a&gt;OK
&lt;/pre&gt;&lt;/div&gt;</description><category>emacs</category><category>linux</category><category>serial port</category><guid>https://g-ar.github.io/posts/communicating-with-serial-ports-using-emacs/</guid><pubDate>Sun, 31 Dec 2017 16:30:37 GMT</pubDate></item><item><title>Animations with Context Free Art</title><link>https://g-ar.github.io/posts/animations-with-context-free-art/</link><description>&lt;div&gt;&lt;p&gt;Context Free Art can also be used to create animations, and here let's see how to generate some moire patterns.&lt;/p&gt;
&lt;p&gt;To generate each frame, cfdg uses the &lt;tt class="docutils literal"&gt;time&lt;/tt&gt; parameter, and the &lt;tt class="docutils literal"&gt;ftime()&lt;/tt&gt; function gets the value for that frame. For our first example, we generate moire patterns with circles.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_211b4918c74e4637a959502614cc036b-22"&gt;22&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-1"&gt;&lt;/a&gt;startshape start
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-3"&gt;&lt;/a&gt;CF::Time = [time -2 2]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-4"&gt;&lt;/a&gt;CF::Background = [b 1]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-5"&gt;&lt;/a&gt;CF::Size = [s 3]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-7"&gt;&lt;/a&gt;path circ(number rad) {
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-8"&gt;&lt;/a&gt;    MOVETO(rad,0)
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-9"&gt;&lt;/a&gt;    ARCTO(-rad,0,rad, CF::ArcCW)
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-10"&gt;&lt;/a&gt;    ARCTO(rad,0,rad, CF::ArcCW)
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-11"&gt;&lt;/a&gt;    STROKE(0.01)[]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-12"&gt;&lt;/a&gt;}
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-14"&gt;&lt;/a&gt;shape moire {
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-15"&gt;&lt;/a&gt;    loop 70 [s 0.98]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-16"&gt;&lt;/a&gt;        circ(1)[]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-17"&gt;&lt;/a&gt;}
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-19"&gt;&lt;/a&gt;shape start {
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-20"&gt;&lt;/a&gt;    moire[x ftime() time -2 2 s 1]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-21"&gt;&lt;/a&gt;    moire[x -ftime() time -2 2 s 1]
&lt;a name="rest_code_211b4918c74e4637a959502614cc036b-22"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;To compile and generate the video of the animations&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_06a3fd4f841a4dcaa03bec3549e756ca-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_06a3fd4f841a4dcaa03bec3549e756ca-1"&gt;&lt;/a&gt;cfdg moire_circles.cfdg -s &lt;span class="m"&gt;1080&lt;/span&gt; -a 15x25 -o ta%f.png
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;generates 375 images (15 seconds, 25 fps) for the animation&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/animations-with-context-free-art/#rest_code_7ea16f47dff74821a8909b5410ff7d60-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_7ea16f47dff74821a8909b5410ff7d60-1"&gt;&lt;/a&gt;ffmpeg -r &lt;span class="m"&gt;25&lt;/span&gt; -i ./ta%3d.png -c:v libx264 out.mp4
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;creates the HD video having a frame rate of 25.&lt;/p&gt;
&lt;p&gt;And here's the final output&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="425" height="344" src="https://www.youtube.com/embed/nPbH9a-jz2w?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Similarly, we can create a couple more animations like moire patterns by &lt;a class="reference external" href="https://github.com/g-ar/CFreeArt/blob/master/v3/moire_lines.cfdg"&gt;rotating grates&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/g-ar/CFreeArt/blob/master/v3/moire_graphene.cfdg"&gt;rotating two graphene layers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="425" height="344" src="https://www.youtube.com/embed/GNHMPBs9Ozo?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="425" height="344" src="https://www.youtube.com/embed/uEw5a-Quk6Q?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;</description><category>computer art</category><category>context free art</category><category>moire patterns</category><guid>https://g-ar.github.io/posts/animations-with-context-free-art/</guid><pubDate>Sat, 11 Nov 2017 14:58:56 GMT</pubDate></item><item><title>Optical Illusions with Context Free Art</title><link>https://g-ar.github.io/posts/optical-illusions-with-context-free-art/</link><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.contextfreeart.org"&gt;Context Free Art&lt;/a&gt; is a program to generate images using context free grammar. We can obtain beautiful images by writing a few tens of lines of code.&lt;/p&gt;
&lt;p&gt;To make it more interesting, let's write code for Optical Illusions. There's a &lt;a class="reference external" href="https://tex.stackexchange.com/questions/129274/showcase-of-optical-illusions-made-with-tex-latex-luatex-context/"&gt;nice list&lt;/a&gt; already done using LaTeX, below are translations and output of some of those.&lt;/p&gt;
&lt;p&gt;CFDG uses &lt;tt class="docutils literal"&gt;startshape&lt;/tt&gt; to know which shape to call first. Then the startshape can use other shapes or paths (primitive symbols, user defined).&lt;/p&gt;
&lt;p&gt;Read the &lt;a class="reference external" href="https://github.com/MtnViewJohn/context-free/wiki"&gt;documentation&lt;/a&gt; for details and examples.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_da1b0e77851145f79de840806ac64cfc-30"&gt;30&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-1"&gt;&lt;/a&gt;startshape start
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-3"&gt;&lt;/a&gt;CF::Background = [hue 90 sat -0.5 b -0.5]
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-4"&gt;&lt;/a&gt;CF::Size = [s 15]
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-6"&gt;&lt;/a&gt;shape start {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-7"&gt;&lt;/a&gt;    loop j=6 [] {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-8"&gt;&lt;/a&gt;    rad = 28 + j*14
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-9"&gt;&lt;/a&gt;    twist = (-1)^j * 12
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-10"&gt;&lt;/a&gt;        loop i=rad [] {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-11"&gt;&lt;/a&gt;            xs = (j + 2)*cos(i*360/rad)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-12"&gt;&lt;/a&gt;            ys = (j + 2)*sin(i*360/rad)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-13"&gt;&lt;/a&gt;            rota = i*360/rad + twist
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-14"&gt;&lt;/a&gt;            if (mod(i, 2) == 1) {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-15"&gt;&lt;/a&gt;                sq [b 1 x xs y ys r rota]
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-16"&gt;&lt;/a&gt;            } else {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-17"&gt;&lt;/a&gt;                sq [b -1 x xs y ys r rota]
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-18"&gt;&lt;/a&gt;            }
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-19"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-20"&gt;&lt;/a&gt;    }
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-21"&gt;&lt;/a&gt;}
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-23"&gt;&lt;/a&gt;path sq {
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-24"&gt;&lt;/a&gt;    MOVETO(0, 0)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-25"&gt;&lt;/a&gt;    LINETO(0, 0.3)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-26"&gt;&lt;/a&gt;    LINETO(0.3, 0.3)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-27"&gt;&lt;/a&gt;    LINETO(0.3, 0)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-28"&gt;&lt;/a&gt;    LINETO(0, 0)
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-29"&gt;&lt;/a&gt;    STROKE(0.03)[]
&lt;a name="rest_code_da1b0e77851145f79de840806ac64cfc-30"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="figure"&gt;
&lt;img alt="../../images/sqr_circles.png" src="https://g-ar.github.io/images/sqr_circles.png"&gt;
&lt;p class="caption"&gt;Illusion 1&lt;/p&gt;
&lt;/div&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/optical-illusions-with-context-free-art/#rest_code_764bce1964114d739ad9f4a1b9bc1828-23"&gt;23&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-1"&gt;&lt;/a&gt;startshape start
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-3"&gt;&lt;/a&gt;CF::Background = [hue 90 sat -0.5 b -0.5]
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-4"&gt;&lt;/a&gt;n = 8
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-5"&gt;&lt;/a&gt;xt = (n - 1)/2
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-6"&gt;&lt;/a&gt;yt = (n - 1)/2
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-7"&gt;&lt;/a&gt;scale = n + 2
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-8"&gt;&lt;/a&gt;CF::Size = [s scale x -xt y -yt]
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-9"&gt;&lt;/a&gt;sqd = 0.8                 // square size
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-10"&gt;&lt;/a&gt;circd = sqrt(2)*(1 - sqd) // circle size
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-12"&gt;&lt;/a&gt;shape start {
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-13"&gt;&lt;/a&gt;    loop j=n [] {
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-14"&gt;&lt;/a&gt;        loop i=n [] {
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-15"&gt;&lt;/a&gt;            ys = j + 0.5
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-16"&gt;&lt;/a&gt;            xs = i + 0.5
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-17"&gt;&lt;/a&gt;            SQUARE[b -1 s sqd x i y j]
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-18"&gt;&lt;/a&gt;            if (i &amp;lt; n-1 &amp;amp;&amp;amp; j &amp;lt; n-1) {
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-19"&gt;&lt;/a&gt;                CIRCLE[z 1 b 1 s circd x xs y ys]
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-20"&gt;&lt;/a&gt;            }
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-21"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-22"&gt;&lt;/a&gt;    }
&lt;a name="rest_code_764bce1964114d739ad9f4a1b9bc1828-23"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="figure"&gt;
&lt;img alt="../../images/grid.png" src="https://g-ar.github.io/images/grid.png"&gt;
&lt;p class="caption"&gt;Illusion 2&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Output of illusions &lt;a class="reference external" href="https://github.com/g-ar/CFreeArt/blob/master/v3/circles_lines.cfdg"&gt;three&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/g-ar/CFreeArt/blob/master/v3/floor_tiles.cfdg"&gt;four&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/g-ar/CFreeArt/blob/master/v3/grid_lines.cfdg"&gt;five&lt;/a&gt; are shown below&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="../../images/circles_lines.png" src="https://g-ar.github.io/images/circles_lines.png"&gt;
&lt;p class="caption"&gt;Illusion 3&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="../../images/floor_tiles.png" src="https://g-ar.github.io/images/floor_tiles.png"&gt;
&lt;p class="caption"&gt;Illusion 4&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="../../images/grid_lines.png" src="https://g-ar.github.io/images/grid_lines.png"&gt;
&lt;p class="caption"&gt;Illusion 5&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;These examples only used simple loops, more complicated shapes can be drawn using recursion. Check out the &lt;a class="reference external" href="https://www.contextfreeart.org/gallery/"&gt;CFDG gallery&lt;/a&gt; for more examples.&lt;/p&gt;&lt;/div&gt;</description><category>computer art</category><category>context free art</category><category>optical illusion</category><guid>https://g-ar.github.io/posts/optical-illusions-with-context-free-art/</guid><pubDate>Sun, 05 Nov 2017 12:08:03 GMT</pubDate></item><item><title>Perfect Parity Patterns</title><link>https://g-ar.github.io/posts/perfect-parity-patterns/</link><description>&lt;div&gt;&lt;pre class="literal-block"&gt;
When image data is involved, the results can be engrossing even if there are bugs in our code.
                                                                                       - D. E. Knuth, TAOCP Vol. 4A
&lt;/pre&gt;
&lt;p&gt;A parity pattern is a binary matrix where each entry is the xor of its adjacent neighbors (horizontal or vertical). It's called perfect when there's no row or column consisting of entirely zeroes.&lt;/p&gt;
&lt;p&gt;We can build bigger parity patterns from smaller ones, which reveals nice fractals when they are plotted as a bitmap.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-42"&gt;42&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-43"&gt;43&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-44"&gt;44&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-45"&gt;45&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-46"&gt;46&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-47"&gt;47&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-48"&gt;48&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-49"&gt;49&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-50"&gt;50&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-51"&gt;51&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-52"&gt;52&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-53"&gt;53&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/perfect-parity-patterns/#rest_code_c9e5f205dd5146d3a915c0fe5c64a313-54"&gt;54&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;build_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbits&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;                    &lt;span class="c1"&gt;# continue with the plotting process&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nbits&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;nbits&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;nbits&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbits&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;zmv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;zmh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;augment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;augment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# consider values outside matrix as 0&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-16"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ncols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ncols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-17"&gt;&lt;/a&gt;            &lt;span class="k"&gt;continue&lt;/span&gt;                  &lt;span class="c1"&gt;# Let's have vertical symmetry (palindrome check)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-19"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-20"&gt;&lt;/a&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-21"&gt;&lt;/a&gt;                &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-23"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-24"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-25"&gt;&lt;/a&gt;                &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;           &lt;span class="c1"&gt;# is the computed matrix actually a parity pattern?&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-26"&gt;&lt;/a&gt;                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-27"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-28"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-29"&gt;&lt;/a&gt;            &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-30"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-31"&gt;&lt;/a&gt;        &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-32"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-33"&gt;&lt;/a&gt;        &lt;span class="n"&gt;nn1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-34"&gt;&lt;/a&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;               &lt;span class="c1"&gt;# build 383x383 matrices&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-35"&gt;&lt;/a&gt;            &lt;span class="n"&gt;nn1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-36"&gt;&lt;/a&gt;            &lt;span class="n"&gt;bn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-37"&gt;&lt;/a&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-38"&gt;&lt;/a&gt;                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-39"&gt;&lt;/a&gt;                    &lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-40"&gt;&lt;/a&gt;                    &lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-41"&gt;&lt;/a&gt;                    &lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-42"&gt;&lt;/a&gt;                    &lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-43"&gt;&lt;/a&gt;            &lt;span class="n"&gt;bn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_rows&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_columns&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-44"&gt;&lt;/a&gt;            &lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-45"&gt;&lt;/a&gt;            &lt;span class="n"&gt;zmv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-46"&gt;&lt;/a&gt;            &lt;span class="n"&gt;zmh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-47"&gt;&lt;/a&gt;            &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bn&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-48"&gt;&lt;/a&gt;            &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;augment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;augment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-49"&gt;&lt;/a&gt;            &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-50"&gt;&lt;/a&gt;        &lt;span class="n"&gt;mp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-51"&gt;&lt;/a&gt;        &lt;span class="n"&gt;mp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-52"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cnt&lt;/span&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-53"&gt;&lt;/a&gt;
&lt;a name="rest_code_c9e5f205dd5146d3a915c0fe5c64a313-54"&gt;&lt;/a&gt;&lt;span class="n"&gt;build_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;And we get a bunch of fractals&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="../../images/sageR.jpg" src="https://g-ar.github.io/images/sageR.jpg"&gt;
&lt;p class="caption"&gt;Patterns&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Source:&lt;/p&gt;
&lt;p&gt;Exercises 190 &amp;amp; 193, 7.1.3, Donald E. Knuth, The Art of Computer Programming, Vol. 4A&lt;/p&gt;&lt;/div&gt;</description><category>computer art</category><category>fractals</category><category>sage</category><guid>https://g-ar.github.io/posts/perfect-parity-patterns/</guid><pubDate>Mon, 30 Oct 2017 14:01:51 GMT</pubDate></item><item><title>Generating Music With SageMath And Sonic Pi - Examples - 2</title><link>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/</link><description>&lt;div&gt;&lt;div class="section" id="blues-loop"&gt;
&lt;h2&gt;1 Blues Loop&lt;/h2&gt;
&lt;p&gt;An approximate translation of the Blues Loop illustrated at &lt;a class="reference external" href="https://mathematica.stackexchange.com/questions/100876/more-elegant-function-construction-for-blues-loop"&gt;mathematica.SE&lt;/a&gt;. &lt;a class="reference external" href="https://soundcloud.com/user-591836524/blues-loop"&gt;(Listen to the Blues Loop&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Sync the OSC URL in Sonic Pi&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-4"&gt;4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-5"&gt;5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-6"&gt;6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-7"&gt;7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_662e32939a9d4233a1aa1fcccc3da5b9-8"&gt;8&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code ruby"&gt;&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;live_loop&lt;/span&gt; &lt;span class="ss"&gt;:foo&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-2"&gt;&lt;/a&gt;  &lt;span class="n"&gt;use_synth&lt;/span&gt; &lt;span class="ss"&gt;:piano&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-3"&gt;&lt;/a&gt;  &lt;span class="n"&gt;use_real_time&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="s2"&gt;"/osc/trigger/play"&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;play&lt;/span&gt; &lt;span class="ss"&gt;:C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack_level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;sustain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-6"&gt;&lt;/a&gt;  &lt;span class="n"&gt;play&lt;/span&gt; &lt;span class="ss"&gt;:C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack_level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;sustain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-7"&gt;&lt;/a&gt;  &lt;span class="n"&gt;play&lt;/span&gt; &lt;span class="ss"&gt;:C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;attack_level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;sustain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;
&lt;a name="rest_code_662e32939a9d4233a1aa1fcccc3da5b9-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;And send the notes from Sage&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_e8877421c7f84d5e984b1636440d937a-34"&gt;34&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;OSC&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4559&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;cl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.25&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-18"&gt;&lt;/a&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-19"&gt;&lt;/a&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-20"&gt;&lt;/a&gt;&lt;span class="n"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-21"&gt;&lt;/a&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-23"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bld&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-24"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-25"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-26"&gt;&lt;/a&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-27"&gt;&lt;/a&gt;                &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-29"&gt;&lt;/a&gt;                &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-30"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-31"&gt;&lt;/a&gt;&lt;span class="n"&gt;li2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-32"&gt;&lt;/a&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-33"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;li2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e8877421c7f84d5e984b1636440d937a-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;bld&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="morse-code"&gt;
&lt;h2&gt;2 Morse Code&lt;/h2&gt;
&lt;p&gt;Let's make a dynamic worksheet to generate morse code beeps.
Only alpha-numeric symbols are used here, and timings are taken from a &lt;a class="reference external" href="https://github.com/rbnpi/SonicPi-Tutorials/blob/master/Morse.md"&gt;Sonic Pi example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In Sonic Pi,&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-4"&gt;4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-5"&gt;5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-6"&gt;6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-7"&gt;7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_9a03b999fe5e415da858e1e731b8f0b5-8"&gt;8&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code ruby"&gt;&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;live_loop&lt;/span&gt; &lt;span class="ss"&gt;:foo&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-2"&gt;&lt;/a&gt;  &lt;span class="n"&gt;use_synth&lt;/span&gt; &lt;span class="ss"&gt;:saw&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-3"&gt;&lt;/a&gt;  &lt;span class="n"&gt;use_real_time&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="s2"&gt;"/osc/trigger/morse"&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;cue&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-6"&gt;&lt;/a&gt;  &lt;span class="n"&gt;play&lt;/span&gt; &lt;span class="ss"&gt;:C6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;sustain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-7"&gt;&lt;/a&gt;  &lt;span class="nb"&gt;sleep&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;a name="rest_code_9a03b999fe5e415da858e1e731b8f0b5-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and in SageMath,&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-42"&gt;42&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-43"&gt;43&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-44"&gt;44&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-45"&gt;45&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-46"&gt;46&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-47"&gt;47&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-48"&gt;48&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-49"&gt;49&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-50"&gt;50&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-51"&gt;51&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-52"&gt;52&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-53"&gt;53&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-54"&gt;54&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-55"&gt;55&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-56"&gt;56&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-57"&gt;57&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/#rest_code_93828fc76d35403fa4530686a962d1ee-58"&gt;58&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;OSC&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4559&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;cl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;codes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-18"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="s1"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-.-.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-19"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'D'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-..'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'E'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="s1"&gt;'F'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'..-.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-20"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'G'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'--.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'H'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'....'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'I'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'..'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-21"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'J'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.---'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'K'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-.-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'L'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.-..'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-22"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'--'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="s1"&gt;'N'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="s1"&gt;'O'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'---'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-23"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'P'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.--.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'Q'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'--.-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'R'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.-.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-24"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'S'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'T'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="s1"&gt;'U'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'..-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-25"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'V'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'...-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'W'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.--'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'X'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-..-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-26"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'Y'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-.--'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'Z'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'--..'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-----'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-27"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'1'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.----'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'2'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'..---'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'...--'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-28"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'....-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'5'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.....'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'6'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'-....'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-29"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'7'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'--...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'8'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'---..'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'9'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'----.'&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-32"&gt;&lt;/a&gt;&lt;span class="n"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.08&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-33"&gt;&lt;/a&gt;&lt;span class="n"&gt;code_timing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-34"&gt;&lt;/a&gt;&lt;span class="n"&gt;element_gap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-35"&gt;&lt;/a&gt;&lt;span class="n"&gt;char_gap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-36"&gt;&lt;/a&gt;&lt;span class="n"&gt;word_gap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;char_gap&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-37"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-38"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_morse_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-39"&gt;&lt;/a&gt;    &lt;span class="n"&gt;spl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-40"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;spl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-41"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="c1"&gt;# if multiple spaces are input&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-42"&gt;&lt;/a&gt;        &lt;span class="n"&gt;mc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;codes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-43"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;": "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-44"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-45"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-46"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-47"&gt;&lt;/a&gt;            &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word_gap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-48"&gt;&lt;/a&gt;            &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-49"&gt;&lt;/a&gt;        &lt;span class="n"&gt;mc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-50"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-51"&gt;&lt;/a&gt;            &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/morse"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code_timing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;code_timing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-52"&gt;&lt;/a&gt;            &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element_gap&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;code_timing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-53"&gt;&lt;/a&gt;        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char_gap&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;element_gap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-54"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-55"&gt;&lt;/a&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-56"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@interact&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-57"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;input_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Enter Message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Hi'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;auto_update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_93828fc76d35403fa4530686a962d1ee-58"&gt;&lt;/a&gt;    &lt;span class="n"&gt;to_morse_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;</description><category>computer art</category><category>OSC</category><category>python</category><category>sage</category><category>Sonic Pi</category><guid>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples-2/</guid><pubDate>Sun, 22 Oct 2017 10:40:26 GMT</pubDate></item><item><title>Generating Music With SageMath And Sonic Pi - Examples</title><link>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/</link><description>&lt;div&gt;&lt;p&gt;We will explore some examples to make music using the libraries included in Sage and python data structures&lt;/p&gt;
&lt;div class="section" id="bach-s-prelude-in-c"&gt;
&lt;h2&gt;1 Bach's Prelude in C&lt;/h2&gt;
&lt;p&gt;Here's a translation of the Mathematica code at &lt;a class="reference external" href="https://mathematica.stackexchange.com/questions/156061/manipulate-a-list-representing-bachs-prelude-in-c"&gt;mathematica.SE&lt;/a&gt;, which is quite nice. (&lt;a class="reference external" href="https://soundcloud.com/user-591836524/bach-prelude"&gt;Listen to Bach&lt;/a&gt;)&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-42"&gt;42&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-43"&gt;43&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-44"&gt;44&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-45"&gt;45&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_0e59942aea724946958bfe3efc8b2bbe-46"&gt;46&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;bwv846&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-2"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-3"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-4"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-5"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-6"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Fs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-7"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-8"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-9"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-10"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Fs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-11"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-12"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Bb3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Cs5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-13"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-14"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Ab3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-15"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"E3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-16"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"E3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-17"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-18"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-19"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-20"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Bb3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-21"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"F2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-22"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Fs2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Eb"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-23"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Ab2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-24"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-25"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-26"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-27"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-28"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Eb3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Fs"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-29"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-30"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-31"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"G2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-32"&gt;&lt;/a&gt;          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Bb3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-33"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-34"&gt;&lt;/a&gt;&lt;span class="n"&gt;finale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-35"&gt;&lt;/a&gt;   &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-36"&gt;&lt;/a&gt;   &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"C1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C5"&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-37"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-38"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;bwv846&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-39"&gt;&lt;/a&gt;    &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-40"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-41"&gt;&lt;/a&gt;        &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-42"&gt;&lt;/a&gt;        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-43"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-44"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;finale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-45"&gt;&lt;/a&gt;    &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0e59942aea724946958bfe3efc8b2bbe-46"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="sound-of-cellular-automaton"&gt;
&lt;h2&gt;2 Sound of Cellular Automaton&lt;/h2&gt;
&lt;p&gt;Using the idea of &lt;a class="reference external" href="https://stackoverflow.com/a/7592876"&gt;mathematica code&lt;/a&gt; using Cellular Automata, we modify the &lt;a class="reference external" href="https://wiki.sagemath.org/interact/misc#Cellular_Automata"&gt;Cellular Automata's interactive example&lt;/a&gt; (&lt;a class="reference external" href="https://soundcloud.com/user-591836524/cellular-automata"&gt;Listen to CA&lt;/a&gt;: 61 iterations, Rule 90)&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-19"&gt;19&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-20"&gt;20&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-21"&gt;21&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-22"&gt;22&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-23"&gt;23&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-24"&gt;24&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-25"&gt;25&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-26"&gt;26&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-27"&gt;27&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-28"&gt;28&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-29"&gt;29&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-30"&gt;30&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-31"&gt;31&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-32"&gt;32&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-33"&gt;33&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-34"&gt;34&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-35"&gt;35&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-36"&gt;36&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-37"&gt;37&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-38"&gt;38&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-39"&gt;39&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-40"&gt;40&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-41"&gt;41&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_485808e0fbdb43ceaec27da54af3fa94-42"&gt;42&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;zeros&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cellular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Single-cell'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;'''Yields a matrix showing the evolution of a Wolfram's cellular automaton&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-7"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    rule:     determines how a cell's value is updated, depending on its neighbors&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    N:        number of iterations&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-9"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    initial:  starting condition; can be either single-cell or a random binary row&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-10"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    '''&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;'Single-cell'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-14"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-18"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-19"&gt;&lt;/a&gt;            &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-20"&gt;&lt;/a&gt;            &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[:,:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-23"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;num2rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-24"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-25"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Invalid rule number'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;binary_digits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-27"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;binary_digits&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binary_digits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-29"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@interact&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-30"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'Single-cell'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Random'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Starting condition'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;input_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Number of iterations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-31"&gt;&lt;/a&gt;       &lt;span class="n"&gt;rule_number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;input_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Rule number'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-32"&gt;&lt;/a&gt;       &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Size'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;auto_update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-33"&gt;&lt;/a&gt;    &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num2rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rule_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cellular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;plot_M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'binary'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;plot_M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-38"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-39"&gt;&lt;/a&gt;        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-40"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-41"&gt;&lt;/a&gt;            &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_485808e0fbdb43ceaec27da54af3fa94-42"&gt;&lt;/a&gt;            &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="hmm-emitting-notes"&gt;
&lt;h2&gt;3 HMM Emitting Notes&lt;/h2&gt;
&lt;p&gt;We may even use the notes of pleasant compositions to train Markov Models, which can later keep producing notes probabilistically. E.g. a 3 symbol model looks like: (&lt;a class="reference external" href="https://soundcloud.com/user-591836524/hidden-markov-model-emitting-notes"&gt;Listen to HMM&lt;/a&gt;)&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/#rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-4"&gt;4&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hmm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DiscreteHiddenMarkovModel&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Fs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7044f3012c684d3cb4e1d390b6ef8b7f-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;</description><category>computer art</category><category>OSC</category><category>python</category><category>sage</category><category>Sonic Pi</category><guid>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi-examples/</guid><pubDate>Sat, 21 Oct 2017 10:35:16 GMT</pubDate></item><item><title>Generating Music With SageMath And Sonic Pi</title><link>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/</link><description>&lt;div&gt;&lt;p&gt;In this post, we will see how to generate music with Python/SageMath and Sonic Pi.
Sonic Pi itself is quite nice to make music, but python is an attractive option due to large number of math libraries written for it.
So, here are the steps:&lt;/p&gt;
&lt;div class="section" id="install-pyosc"&gt;
&lt;h2&gt;1 Install PyOSC&lt;/h2&gt;
&lt;p&gt;Open Sage subshell&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_66d20c735216457487da6253704475ab-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_66d20c735216457487da6253704475ab-1"&gt;&lt;/a&gt;sage -sh
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Install PyOSC library&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_af3d81190e674ef783cc0a34af92fff9-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_af3d81190e674ef783cc0a34af92fff9-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;PyOSC&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="run-sonic-pi-and-sync-with-an-osc-url"&gt;
&lt;h2&gt;2 Run Sonic Pi and sync with an OSC URL&lt;/h2&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-1"&gt;1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-2"&gt;2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-3"&gt;3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-4"&gt;4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-5"&gt;5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-6"&gt;6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_197759a9e8be40f4a54b8b4680c046c8-7"&gt;7&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code ruby"&gt;&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;use_synth&lt;/span&gt; &lt;span class="ss"&gt;:piano&lt;/span&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;live_loop&lt;/span&gt; &lt;span class="ss"&gt;:foo&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;use_real_time&lt;/span&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="s2"&gt;"/osc/trigger/play"&lt;/span&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-6"&gt;&lt;/a&gt;  &lt;span class="n"&gt;play_chord&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;a name="rest_code_197759a9e8be40f4a54b8b4680c046c8-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="pass-messages-to-the-osc-url-and-play-notes"&gt;
&lt;h2&gt;3 Pass messages to the OSC URL and play notes&lt;/h2&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-11"&gt;11&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-12"&gt;12&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-13"&gt;13&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-14"&gt;14&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-15"&gt;15&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-16"&gt;16&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-17"&gt;17&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-18"&gt;18&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/#rest_code_b5b06718fca64796bde3a642f0ccde92-19"&gt;19&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;OSC&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sin&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4559&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OSC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSCMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-18"&gt;&lt;/a&gt;        &lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/trigger/play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# float's not required in python, but throws error in Sage without it&lt;/span&gt;
&lt;a name="rest_code_b5b06718fca64796bde3a642f0ccde92-19"&gt;&lt;/a&gt;        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;</description><category>computer art</category><category>OSC</category><category>python</category><category>sage</category><category>Sonic Pi</category><guid>https://g-ar.github.io/posts/generating-music-with-sagemath-and-sonic-pi/</guid><pubDate>Fri, 20 Oct 2017 09:53:44 GMT</pubDate></item><item><title>Profiling Python Programs</title><link>https://g-ar.github.io/posts/profiling-python-programs/</link><description>&lt;div&gt;&lt;p&gt;Last week, when I was looking up for some info on list comprehensions, one of the pages listed a code something like this&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-1"&gt; 1&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-2"&gt; 2&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-3"&gt; 3&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-4"&gt; 4&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-5"&gt; 5&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-6"&gt; 6&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-7"&gt; 7&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-8"&gt; 8&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-9"&gt; 9&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-10"&gt;10&lt;/a&gt;
&lt;a href="https://g-ar.github.io/posts/profiling-python-programs/#rest_code_689dfec236a54340a10edf79b0d7267a-11"&gt;11&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Access every 3rd element in a list&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# filename: access.py&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_689dfec236a54340a10edf79b0d7267a-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and I thought for a moment whether the length will be calculated for each iteration, or will it be called only once? I also thought of an answer that since python code is interpreted, it may not do any peephole optimization, and hence &lt;tt class="docutils literal"&gt;len&lt;/tt&gt; will be called five times. Anyway, wanted to know the command that would quantify every call in the program and found about cProfile module. We simply run the following:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b0185e34db7941a0a0b346a71d70acc5-1"&gt;&lt;/a&gt;python -mcProfile -sncalls access.py
&lt;/pre&gt;&lt;p&gt;which will do the profiling and order by the number of calls&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-1"&gt;&lt;/a&gt;1
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-2"&gt;&lt;/a&gt;1
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-3"&gt;&lt;/a&gt;1
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-4"&gt;&lt;/a&gt;1
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-5"&gt;&lt;/a&gt;         8 function calls in 0.000 seconds
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-7"&gt;&lt;/a&gt;   Ordered by: call count
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-9"&gt;&lt;/a&gt;   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-10"&gt;&lt;/a&gt;        5    0.000    0.000    0.000    0.000 {len}
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-11"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-12"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 access.py:2(&amp;lt;module&amp;gt;)
&lt;a name="rest_code_529e8ca7907141f69d643ce3587233ab-13"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 access.py:2(main)
&lt;/pre&gt;&lt;p&gt;So, will the optimization flag do anything for that?&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_31489ba9944c4dc6b6544245a0617469-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# filename: call_access.py&lt;/span&gt;
&lt;a name="rest_code_31489ba9944c4dc6b6544245a0617469-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;access&lt;/span&gt;
&lt;a name="rest_code_31489ba9944c4dc6b6544245a0617469-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_31489ba9944c4dc6b6544245a0617469-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_31489ba9944c4dc6b6544245a0617469-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;and run&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8d2859ed9d5f41b196dc096a5cdff87c-1"&gt;&lt;/a&gt;python -OO -mcProfile -sncalls call_access.py
&lt;/pre&gt;&lt;p&gt;but the output doesn't change much!&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-1"&gt;&lt;/a&gt;1
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-2"&gt;&lt;/a&gt;1
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-3"&gt;&lt;/a&gt;1
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-4"&gt;&lt;/a&gt;1
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-5"&gt;&lt;/a&gt;         9 function calls in 0.000 seconds
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-7"&gt;&lt;/a&gt;   Ordered by: call count
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-9"&gt;&lt;/a&gt;   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-10"&gt;&lt;/a&gt;        5    0.000    0.000    0.000    0.000 {len}
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-11"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-12"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 access.py:2(&amp;lt;module&amp;gt;)
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-13"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 access.py:2(main)
&lt;a name="rest_code_90ded5e383f14d05b26bedd880fbf9ed-14"&gt;&lt;/a&gt;        1    0.000    0.000    0.000    0.000 call_access.py:1(&amp;lt;module&amp;gt;)
&lt;/pre&gt;&lt;p&gt;So, even with the optimization flag, number of calls to &lt;tt class="docutils literal"&gt;len&lt;/tt&gt; remains the same.&lt;/p&gt;
&lt;p&gt;We can verify that the bytecode is executed when we run it by using &lt;tt class="docutils literal"&gt;strace&lt;/tt&gt;. For instance, when I ran command the second time, the relevent part of the &lt;tt class="docutils literal"&gt;strace&lt;/tt&gt; output is below&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-1"&gt;&lt;/a&gt;open("access.py", O_RDONLY)             = 3
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-2"&gt;&lt;/a&gt;fstat(3, {st_mode=S_IFREG|0644, st_size=172, ...}) = 0
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-3"&gt;&lt;/a&gt;open("access.pyo", O_RDONLY)            = 4
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-4"&gt;&lt;/a&gt;fstat(4, {st_mode=S_IFREG|0644, st_size=389, ...}) = 0
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-5"&gt;&lt;/a&gt;read(4, "\3\363\r\nC\252}Xc\0\0\0\0\0\0\0\0\2\0\0\0@\0\0\0s#\0\0\0d\0"..., 4096) = 389
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-6"&gt;&lt;/a&gt;fstat(4, {st_mode=S_IFREG|0644, st_size=389, ...}) = 0
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-7"&gt;&lt;/a&gt;read(4, "", 4096)                       = 0
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-8"&gt;&lt;/a&gt;close(4)                                = 0
&lt;a name="rest_code_3fa79c9281544a6ea6ccd43a189fd66e-9"&gt;&lt;/a&gt;close(3)
&lt;/pre&gt;&lt;p&gt;It did not read access.py again, but it read access.pyo instead. As long as the source is not modified, python reads the bytecode to execute instead of the source (the bytecode stores the modification time of its source code)&lt;/p&gt;
&lt;p&gt;Anyway, we need not do any of these analyses to know whether the bytecode has any code optimization in it. The python docs straight away answers with the following point&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A program doesn't run any faster when it is read from a .pyc or .pyo file than when it is read from a .py file; the only thing that's faster about .pyc or .pyo files is the speed with which they are loaded. (&lt;a class="reference external" href="https://docs.python.org/2/tutorial/modules.html"&gt;docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>python</category><category>strace</category><guid>https://g-ar.github.io/posts/profiling-python-programs/</guid><pubDate>Tue, 17 Jan 2017 12:26:38 GMT</pubDate></item><item><title>Getting Started With Emacs</title><link>https://g-ar.github.io/posts/getting-started-with-emacs/</link><description>&lt;div&gt;&lt;p&gt;Emacs is an editor that lets us to edit quickly, avoid boring repetitive typing, define custom commands and bind them to desired keys etc. Plus many of its key bindings work in bash too, so, it's really worth to have some time familiarizing with this ancient editor. Let's take a look about the various key bindings and modes --&lt;/p&gt;
&lt;div class="section" id="a-little-cheat-sheet"&gt;
&lt;h2&gt;A little cheat sheet&lt;/h2&gt;
&lt;p&gt;First, some of the common commands. C means ctrl key, and M means alt key:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="17%"&gt;
&lt;col width="83%"&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;strong&gt;Key&lt;/strong&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;strong&gt;Function&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-e&lt;/td&gt;
&lt;td&gt;Go to end of line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-a&lt;/td&gt;
&lt;td&gt;Go to beginning of line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-t&lt;/td&gt;
&lt;td&gt;Swap adjacent characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-t&lt;/td&gt;
&lt;td&gt;Swap adjacent words&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x t&lt;/td&gt;
&lt;td&gt;transpose two lines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x k&lt;/td&gt;
&lt;td&gt;kill current buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-&amp;lt;space&amp;gt;&lt;/td&gt;
&lt;td&gt;Mark beginning of region, move cursor to highlight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-%&lt;/td&gt;
&lt;td&gt;replace in region&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-s&lt;/td&gt;
&lt;td&gt;forward search&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-r&lt;/td&gt;
&lt;td&gt;reverse search&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-&amp;lt;&lt;/td&gt;
&lt;td&gt;Go to beginning of buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-&amp;gt;&lt;/td&gt;
&lt;td&gt;Go to end&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x h&lt;/td&gt;
&lt;td&gt;Whole buffer's selected as region&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;f3&lt;/td&gt;
&lt;td&gt;Start recording macro&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;f4&lt;/td&gt;
&lt;td&gt;stop recording macro (press f4 to play that macro)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-u&lt;/td&gt;
&lt;td&gt;Convert the word after the cursor to uppercase&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-l&lt;/td&gt;
&lt;td&gt;Convert to lower case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-c&lt;/td&gt;
&lt;td&gt;Capitalize word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-=&lt;/td&gt;
&lt;td&gt;Count lines, words, and characters in region&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There are thousands of commands, which can be invoked by M-x and entering the command name, in case we don't remember the key binding for the command. C-h can be used to find help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="org-mode"&gt;
&lt;h2&gt;Org-mode&lt;/h2&gt;
&lt;p&gt;If anybody has to be instantly impressed by Emacs, this will do it! It's more like a markup language, which can export to several formats like html, LaTeX, rst, plaintext etc., and it's much easier to use than formats like rst. We can even use it to create tables, and apply formulas on them like a spreadsheet. How cool is that, spreadsheet without any of its associated bloat?!&lt;/p&gt;
&lt;p&gt;See org-mode's site for its excellent documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ido-mode"&gt;
&lt;h2&gt;Ido-mode&lt;/h2&gt;
&lt;p&gt;This provides suggestions when entering the command after M-x, which is quite helpful in discovering commands when we vaguely remember the command, or even a new command. And it searches for substrings which needn't be continuous, e.g. pressing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; areg&lt;/tt&gt; will highlight align-regexp&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="yasnippet"&gt;
&lt;h2&gt;Yasnippet&lt;/h2&gt;
&lt;p&gt;This is a mode where for a given minor-mode and a keyword in that mode, on pressing tab, it expands to the code snippet as stored. E.g. Open a blank C file, type &lt;tt class="docutils literal"&gt;main&lt;/tt&gt;, then hit TAB, it gets expanded to&lt;/p&gt;
&lt;pre class="code C"&gt;&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e96a1b5cf8724f4f80e4274d9eb553a7-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="auto-complete-mode"&gt;
&lt;h2&gt;Auto-complete mode&lt;/h2&gt;
&lt;p&gt;Provides suggestions to complete the words, showing frequently typed words on top.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="jedi-with-python-mode"&gt;
&lt;h2&gt;Jedi with python mode&lt;/h2&gt;
&lt;p&gt;With python mode, jedi is useful for autocompletion and code navigation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="restclient-mode"&gt;
&lt;h2&gt;Restclient-mode&lt;/h2&gt;
&lt;p&gt;This is indispensable when developing web APIs.
Type the method, endpoint, headers, message, and C-c C-c, and a nicely formatted response will be shown in an adjacent window! The requests can be stored in a file, separted by &lt;tt class="docutils literal"&gt;#&lt;/tt&gt; as a delimiter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="expand-region"&gt;
&lt;h2&gt;Expand-region&lt;/h2&gt;
&lt;p&gt;Expands the region based on semantic units
E.g. in a word "a-string", when the cursor is at 'a', when &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-=&lt;/span&gt;&lt;/tt&gt; is pressed once, 'a' is selected, on pressing again 'a-string' is selected, pressing again selects '"a-string"'. Very useful when we need to copy or delete a block of code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tiny"&gt;
&lt;h2&gt;Tiny&lt;/h2&gt;
&lt;p&gt;Tiny is not yasnippet, is another one, which can expand a given sentence with required numerical range.
E.g. Construct the ascii table! Press &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; &lt;span class="pre"&gt;tiny-expand&lt;/span&gt;&lt;/tt&gt; after entering
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;m97\n122|%03d&lt;/span&gt; %(string x)&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-1"&gt;&lt;/a&gt;097 a
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-2"&gt;&lt;/a&gt;098 b
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-3"&gt;&lt;/a&gt;099 c
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-4"&gt;&lt;/a&gt;100 d
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-5"&gt;&lt;/a&gt;101 e
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-6"&gt;&lt;/a&gt;102 f
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-7"&gt;&lt;/a&gt;103 g
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-8"&gt;&lt;/a&gt;104 h
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-9"&gt;&lt;/a&gt;105 i
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-10"&gt;&lt;/a&gt;106 j
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-11"&gt;&lt;/a&gt;107 k
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-12"&gt;&lt;/a&gt;108 l
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-13"&gt;&lt;/a&gt;109 m
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-14"&gt;&lt;/a&gt;110 n
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-15"&gt;&lt;/a&gt;111 o
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-16"&gt;&lt;/a&gt;112 p
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-17"&gt;&lt;/a&gt;113 q
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-18"&gt;&lt;/a&gt;114 r
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-19"&gt;&lt;/a&gt;115 s
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-20"&gt;&lt;/a&gt;116 t
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-21"&gt;&lt;/a&gt;117 u
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-22"&gt;&lt;/a&gt;118 v
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-23"&gt;&lt;/a&gt;119 w
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-24"&gt;&lt;/a&gt;120 x
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-25"&gt;&lt;/a&gt;121 y
&lt;a name="rest_code_2101ff9b8d3a467598782accde823fda-26"&gt;&lt;/a&gt;122 z
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="rainbow-delimiters-mode"&gt;
&lt;h2&gt;Rainbow-delimiters-mode&lt;/h2&gt;
&lt;p&gt;This is useful for languages where brackets are used to identify blocks, like lisp, C etc. This mode marks each block level's parentheses with  different colors, so that it becomes easy to figure out any missing parenthesis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="artist-mode"&gt;
&lt;h2&gt;Artist-mode&lt;/h2&gt;
&lt;p&gt;Want to make some ascii-art? There's a mode for that as well!
Enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; &lt;span class="pre"&gt;artist-mode&lt;/span&gt;&lt;/tt&gt;, and then we can easily create rectangle, ellipse, polygons etc. in the text file.
If we want to draw with a mouse in the emacs GUI, press &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;shift-&amp;lt;mouse-2&amp;gt;&lt;/span&gt;&lt;/tt&gt; (middle click), which shows the menu of options to draw like rectangle, ellipse, pen, spray-can etc. Very handy if we want to draw simple block diagrams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="calc-mode"&gt;
&lt;h2&gt;Calc-mode&lt;/h2&gt;
&lt;p&gt;This is a stack-based scientific calculator which performs many of the calculations. It's a mini CAS!
To start it, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; calc&lt;/tt&gt;, and as an example, we can do unit conversions, by typing in the calc window:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_9358c08583eb4f0d95865d48e0cdced8-1"&gt;&lt;/a&gt;1
&lt;a name="rest_code_9358c08583eb4f0d95865d48e0cdced8-2"&gt;&lt;/a&gt;u c
&lt;a name="rest_code_9358c08583eb4f0d95865d48e0cdced8-3"&gt;&lt;/a&gt;day
&lt;a name="rest_code_9358c08583eb4f0d95865d48e0cdced8-4"&gt;&lt;/a&gt;s
&lt;/pre&gt;&lt;p&gt;will return 86400, which means 86400 seconds are there in a day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="replace-regexp"&gt;
&lt;h2&gt;Replace-Regexp&lt;/h2&gt;
&lt;p&gt;This is a function, which can be used to replace words using regular expressions. E.g. consider a text file consisting of comma delimited values like&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_38be84b8b4e0427db1e615b2faa80d23-1"&gt;&lt;/a&gt;12,11
&lt;a name="rest_code_38be84b8b4e0427db1e615b2faa80d23-2"&gt;&lt;/a&gt;1,33
&lt;a name="rest_code_38be84b8b4e0427db1e615b2faa80d23-3"&gt;&lt;/a&gt;54,77
&lt;a name="rest_code_38be84b8b4e0427db1e615b2faa80d23-4"&gt;&lt;/a&gt;99,101
&lt;/pre&gt;&lt;p&gt;Now, we can use regular expressions to swap the numbers in each row using the following steps:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_61ff2b45503446f69516e044c58ed43a-1"&gt;&lt;/a&gt;- Select the region
&lt;a name="rest_code_61ff2b45503446f69516e044c58ed43a-2"&gt;&lt;/a&gt;- M-x replace-regexp
&lt;a name="rest_code_61ff2b45503446f69516e044c58ed43a-3"&gt;&lt;/a&gt;- Replace regexp:\([0-9]+\),\([0-9]+\)
&lt;a name="rest_code_61ff2b45503446f69516e044c58ed43a-4"&gt;&lt;/a&gt;- Replace regexp \([0-9]+\),\([0-9]+\) with:\2,\1
&lt;/pre&gt;&lt;p&gt;And we get the result&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_40ffe5e4b4144563b3b4c4a527957ff8-1"&gt;&lt;/a&gt;11,12
&lt;a name="rest_code_40ffe5e4b4144563b3b4c4a527957ff8-2"&gt;&lt;/a&gt;33,1
&lt;a name="rest_code_40ffe5e4b4144563b3b4c4a527957ff8-3"&gt;&lt;/a&gt;77,54
&lt;a name="rest_code_40ffe5e4b4144563b3b4c4a527957ff8-4"&gt;&lt;/a&gt;101,99
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="align-regexp"&gt;
&lt;h2&gt;Align-Regexp&lt;/h2&gt;
&lt;p&gt;This is another useful function to beautify our text. E.g. if we have the following snippet:&lt;/p&gt;
&lt;pre class="code C"&gt;&lt;a name="rest_code_00acfea00e614390a61ae2c4a235a47a-1"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_00acfea00e614390a61ae2c4a235a47a-2"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;squared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_00acfea00e614390a61ae2c4a235a47a-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cubed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;squared&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; &lt;span class="pre"&gt;align-regexp&lt;/span&gt; =&lt;/tt&gt; aligns with &lt;tt class="docutils literal"&gt;=&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code C"&gt;&lt;a name="rest_code_3774d34298924253bf00ede110c01874-1"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_3774d34298924253bf00ede110c01874-2"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;squared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_3774d34298924253bf00ede110c01874-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cubed&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;squared&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And there are many more modes and commands, which make editing fun!&lt;/p&gt;
&lt;p&gt;For a detailed reference:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.gnu.org/software/emacs/refcards/ps/refcard.ps.gz"&gt;Emacs reference card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://orgmode.org/"&gt;Org mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://masteringemacs.org/article/introduction-to-ido-mode"&gt;Ido mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.emacswiki.org/emacs/Yasnippet"&gt;yasnippet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/auto-complete/auto-complete"&gt;auto-complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tkf.github.io/emacs-jedi/latest/"&gt;Jedi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/pashky/restclient.el"&gt;Restclient-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/magnars/expand-region.el"&gt;Expand-region&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://elpa.gnu.org/packages/tiny.html"&gt;Tiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Fanael/rainbow-delimiters"&gt;Rainbow-delimiters-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/calc.html"&gt;Calc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or get help within emacs, by pressing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-h&lt;/span&gt; m&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><guid>https://g-ar.github.io/posts/getting-started-with-emacs/</guid><pubDate>Sun, 25 Dec 2016 06:22:17 GMT</pubDate></item></channel></rss>